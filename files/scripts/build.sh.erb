#! /bin/bash -l

set -x
set -e

export DEBIAN_FRONTEND=noninteractive
apt-get update
apt-get dist-upgrade -y
unset DEBIAN_FRONTEND

## before build hook
<% build_config[:before_build].each do |cmd| -%>
<%= cmd %>
<% end -%>

## remove rbenv-default-gems plugin if exists
if [ -d /opt/rbenv/plugins/rbenv-default-gems ]; then
  rm -fr /opt/rbenv/plugins/rbenv-default-gems
fi

## update rbenv, and plugins
rbenv update

## add custom defs
add_definition (){
	version=$1
	src=$2
	cat > "/opt/rbenv/plugins/ruby-build/share/ruby-build/${1}" <<-DEFINITION
		install_package "ruby-${version}" "${src}" ldflags_dirs standard verify_openssl
	DEFINITION
}
<% if build_config[:src] -%>
add_definition "<%= build_config[:version] %>" "<%= build_config[:src] %>"
<% end -%>

## prepare patches
<% unless build_config[:patches].empty? -%>
mkdir -p /tmp/patches
touch /tmp/patches/series
<% end -%>
<% build_config[:patches].each do |patch| -%>
<% case -%>
<% when patch['url'] -%>
( cd /tmp/patches; curl -sSL <%= patch['as'] ? "-o #{patch['as']}" : "-O" %> <%= patch['url'] %> )
echo "<%= patch['as'] || File.basename(patch['url']) %>" >> /tmp/patches/series
<% when patch['file'] -%>
cp -a /data/patches/<%= patch['file'] %> /tmp/patches/
echo "<%= patch['file'] %>" >> /tmp/patches/series
<% end -%>
<% end -%>

## install openssl if necessary
<% if build_config[:openssl] -%>
openssl_version=<%= build_config[:openssl][:version] %>
curl -sSf -o /tmp/openssl-${openssl_version}.tar.gz https://www.openssl.org/source/openssl-${openssl_version}.tar.gz
(
  cd /tmp
  tar xf openssl-${openssl_version}.tar.gz
  cd openssl-${openssl_version}
  ./config --prefix=/opt/openssl-${openssl_version} --openssldir=/opt/openssl-${openssl_version} shared zlib
  make
  make install
  rm -rf /opt/openssl-${openssl_version}/certs
  ln -s /etc/ssl/certs /opt/openssl-${openssl_version}
)
tar cfz <%= build_config[:openssl][:remote] %> -C /opt openssl-${openssl_version}
if [ -n "${RUBY_CONFIGURE_OPTS}" ]; then
  RUBY_CONFIGURE_OPTS="${RUBY_CONFIGURE_OPTS} --with-openssl-dir=/opt/openssl-${openssl_version}"
else
  RUBY_CONFIGURE_OPTS="--with-openssl-dir=/opt/openssl-${openssl_version}"
  export RUBY_CONFIGURE_OPTS
fi
<% end -%>

## build and install ruby
if [ -d /tmp/patches ]; then
  cat $(sed -e 's@^@/tmp/patches/@' /tmp/patches/series) | rbenv install --patch -k -v <%= build_config[:version] %> | tee <%= build_config[:log][:remote] %>
else
  rbenv install -k -v <%= build_config[:version] %> | tee <%= build_config[:log][:remote] %>
fi

## after build hook
<% build_config[:after_build].each do |cmd| -%>
<%= cmd %>
<% end -%>

## archive binary
tar cfz <%= build_config[:tarball][:remote] %> -C /opt/rbenv/versions <%= build_config[:version] %>

